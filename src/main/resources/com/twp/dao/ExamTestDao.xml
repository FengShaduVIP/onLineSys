<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.twp.dao.ExamTestDao">

	<select id="queryObject" resultType="com.twp.entity.ExamTestEntity">
		select * from exam_test where id = #{value}
	</select>

	<select id="queryList" resultType="java.util.HashMap">
		select a.* ,b.real_name from exam_test a,sys_user b where a.author_id = b.user_id
		<if test="teachId!=null">
			AND a.author_id = #{teachId}
		</if>
		order by a.end_time DESC, a.status DESC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryIsGoingList" resultType="java.util.HashMap">
		select a.* ,b.real_name from exam_test a,sys_user b ,class_test c where c.class_id = #{classId} and c.exam_test_id = a.id
		and  a.status = 1 and a.author_id = b.user_id order by a.end_time DESC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryGoingList" resultType="com.twp.entity.ExamTestEntity">
		select *  from exam_test where status = 1  order by end_time ASC
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from exam_test 
	</select>
	
	<select id="queryIsGoingTotal" resultType="int">
		select count(*) from exam_test  where status = 1
	</select>
	
<!--	<select id="queryExamTestList" resultType="java.util.HashMap">
		SELECT c.id, c.title, c.context, c.score, d.`status` FROM exam_test a, exampaper_item b, sys_item c, stu_exam_item d
		WHERE a.id = #{0} and a.exam__paper_id = b.exampaper_id and  b.item_id = c.id and d.item_id = b.item_id and d.stu_id = #{1} ORDER BY c.id ASC
	</select>-->

	<select id="queryExamTestList" resultType="java.util.HashMap">
		SELECT
			re.*, IFNULL(stu_item.STATUS,2) as status
		FROM
			stu_exam_item stu_item
		RIGHT JOIN (
			SELECT
				c.id,
				c.title,
				c.context,
				c.score
			FROM
				exam_test a,
				exampaper_item b,
				sys_item c
			WHERE
				a.id = #{0}
			AND a.exam__paper_id = b.exampaper_id
			AND b.item_id = c.id
		) re ON stu_item.item_id = re.id
		AND stu_item.stu_id = #{1}
		AND stu_item.exam_test_id = #{0}
	</select>
	 
	<insert id="save" parameterType="com.twp.entity.ExamTestEntity" useGeneratedKeys="true" keyProperty="id">
		insert into exam_test
		(
			`exam__paper_id`, 
			`author_id`, 
			`start_time`, 
			`end_time`, 
			`create_time`,
			`status`,
			`exam_title`,
			`class_id`
		)
		values
		(
			#{examPaperId}, 
			#{authorId}, 
			#{startTime}, 
			#{endTime}, 
			#{createTime},
			#{status},
			#{examTitle},
			#{classId}
		)
	</insert>
	 
	<update id="update" parameterType="com.twp.entity.ExamTestEntity">
		update exam_test 
		<set>
			<if test="examPaperId != null">`exam__paper_id` = #{examPaperId}, </if>
			<if test="authorId != null">`author_id` = #{authorId}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="createTime != null">`create_time` = #{createTime},</if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="examTitle != null">`exam_title` = #{examTitle},</if>
			<if test="classId != null">`class_id` = #{classId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from exam_test where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from exam_test where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>